Got it üëç ‚Äî here‚Äôs a **ready-to-paste prompt** you can drop straight into the Replit AI assistant. I‚Äôve written it in ‚Äúlistener mode‚Äù (talking directly to the assistant, not you), so it‚Äôs crystal clear what needs fixing and why.

---

# Prompt for Replit Assistant

You are my coding pair. Listen carefully and follow this plan step by step.

---

## üõ† Problem

* When I call my endpoint (`/api/v1/heatmap/ai`) with Puppeteer, the server crashes with:

```
error while loading shared libraries: libglib-2.0.so.0: cannot open shared object file: No such file or directory
```

* This means Replit‚Äôs container doesn‚Äôt have the Linux libraries Chromium needs.
* Right now Puppeteer is trying to use its downloaded Chrome binary, which fails inside Replit.

---

## ‚úÖ What you must do

1. **Add a `replit.nix` file** (at project root) that installs Node, Chromium, and all required shared libraries. Use this exact content:

```nix
{ pkgs }: {
  deps = [
    pkgs.nodejs-20_x
    pkgs.git

    # Chromium + runtime libs for Puppeteer
    pkgs.chromium
    pkgs.nss
    pkgs.atk
    pkgs.at-spi2-atk
    pkgs.cups
    pkgs.libdrm
    pkgs.alsa-lib
    pkgs.libxshmfence
    pkgs.mesa
    pkgs.libxkbcommon
    pkgs.glib
    pkgs.pango
    pkgs.cairo
    pkgs.freetype
    pkgs.fontconfig
    pkgs.harfbuzz
  ];
}
```

2. **Tell Puppeteer to use system Chromium** instead of downloading its own.

   In `server/lib/browser.ts` (or wherever I call `puppeteer.launch`):

   ```ts
   import puppeteer from "puppeteer";

   const executablePath =
     process.env.PUPPETEER_EXECUTABLE_PATH || "/usr/bin/chromium";

   let browser = null;
   export async function getBrowser() {
     if (browser) return browser;
     browser = await puppeteer.launch({
       headless: true,
       executablePath,
       args: [
         "--no-sandbox",
         "--disable-setuid-sandbox",
         "--disable-dev-shm-usage",
         "--disable-gpu"
       ]
     });
     return browser;
   }
   ```

3. **Set environment variable** in the Replit Secrets panel:

   ```
   PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=1
   ```

   This prevents Puppeteer from wasting time downloading its own Chrome.

4. **Rebuild environment** in Replit (so nix packages install). Then restart the project.

---

## üéØ Goal

* After these changes, Puppeteer should successfully launch Chromium from `/usr/bin/chromium` with all required libs.
* Running this curl should now return JSON with a heatmap URL instead of crashing:

```bash
curl -X POST "https://<your-repl>.replit.dev/api/v1/heatmap/ai" \
  -H "Content-Type: application/json" \
  -H "x-api-key: ai_lure_6c05c497_7tFtPJhc4mjgvoxt-vDwh0_W49HB9I0D" \
  -d '{"url":"https://www.acquisition.com","return":"url"}'
```

---

Do exactly the above, step by step.

---

üëâ Do you want me to also include a **test plan** inside the prompt so the assistant auto-verifies the fix after applying it?
